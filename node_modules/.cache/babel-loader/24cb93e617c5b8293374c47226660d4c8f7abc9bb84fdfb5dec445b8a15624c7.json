{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Consitution of India\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport '../Chatbot.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleAsk = async () => {\n    if (!query.trim()) return;\n    setLoading(true);\n    setResponse('');\n    try {\n      const res = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: query\n        })\n      });\n      const data = await res.json();\n      setResponse(data.answer || 'No response received.');\n    } catch (error) {\n      setResponse('Error: Could not get response. Please try again.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ask Constitution AI Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask any legal, constitutional, or rights-related question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAsk,\n        disabled: loading,\n        children: loading ? 'Thinking...' : 'Ask'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Fo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Chatbot, \"rPyGwRgE2JAleeg2wRJTOkhS4Qo=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","query","setQuery","response","setResponse","loading","setLoading","handleAsk","trim","res","fetch","method","headers","body","JSON","stringify","question","data","json","answer","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","placeholder","onClick","disabled","Fo","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Consitution of India/frontend/src/components/ChatBot.js"],"sourcesContent":["// src/components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport '../Chatbot.css';\r\nimport Navbar from './Navbar';\r\nexport default function Chatbot() {\r\n  const [query, setQuery] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleAsk = async () => {\r\n    if (!query.trim()) return;\r\n    setLoading(true);\r\n    setResponse('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/ask', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ question: query })\r\n      });\r\n      const data = await res.json();\r\n      setResponse(data.answer || 'No response received.');\r\n    } catch (error) {\r\n      setResponse('Error: Could not get response. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <div className=\"chatbot-container\">\r\n      <h2>Ask Constitution AI Guide</h2>\r\n      <textarea\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Ask any legal, constitutional, or rights-related question...\"\r\n      ></textarea>\r\n      <button onClick={handleAsk} disabled={loading}>\r\n        {loading ? 'Thinking...' : 'Ask'}\r\n      </button>\r\n      {response && (\r\n        <div className=\"chatbot-response\">\r\n          <strong>Answer:</strong>\r\n          <p>{response}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n    <Fo/>\r\n</>\r\n  );\r\n  \r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}